<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AskAnExpertPlaceholderText" xml:space="preserve">
    <value>Type your detailed question and supporting details here (500 characters max)</value>
    <comment>Ask an expert placeholder text.</comment>
  </data>
  <data name="AskAnExpertTitleText" xml:space="preserve">
    <value>**Ask an expert**</value>
    <comment>Title of the ask an expert card.</comment>
  </data>
  <data name="AskAnExpertText2" xml:space="preserve">
    <value>...If my answer isn't satisfactory... I'll connect you to an expert.</value>
    <comment>Helps the user in understanding there is an expert team to connect to.</comment>
  </data>
  <data name="FeedbackText1" xml:space="preserve">
    <value>Tell my team of experts how I'm doing so they can help me improve.</value>
    <comment>Text suggests that user is invited to share his feedback on his experience using bot.</comment>
  </data>
  <data name="FunctionCardText1" xml:space="preserve">
    <value>Ask a question</value>
    <comment>Explains what bot does and possible questions.</comment>
  </data>
  <data name="FunctionCardText2" xml:space="preserve">
    <value>You can ask me a question by typing it in the chat box below  I'll try my best to answer it...</value>
    <comment>Suggests the user to ask question.</comment>
  </data>
  <data name="ShareFeedbackButtonText" xml:space="preserve">
    <value>Feedback</value>
    <comment>Button text for share feedback show card in QnA response card.</comment>
  </data>
  <data name="DescriptionText" xml:space="preserve">
    <value>**Description:**</value>
    <comment>Label text for description.</comment>
  </data>
  <data name="FeedbackDescriptionPlaceholderText" xml:space="preserve">
    <value>Would love to hear more about your feedback</value>
    <comment>Placeholder label where the user enters feedback in the text box.</comment>
  </data>
  <data name="StatusFactTitle" xml:space="preserve">
    <value>**Status:**</value>
    <comment>Status one of the available fact set in notification cards.</comment>
  </data>
  <data name="AskAnExpertButtonText" xml:space="preserve">
    <value>Ask expert</value>
    <comment>Action button which invokes ask an expert show card.</comment>
  </data>
  <data name="ThankYouTextContent" xml:space="preserve">
    <value>Thanks a lot for the feedback!</value>
    <comment>The content for the thank you adaptive card which is shown whenever user submits feedback on the app or on a response that is generated by QnA service.</comment>
  </data>
  <data name="ChatTextButton" xml:space="preserve">
    <value>Chat with {0}</value>
    <comment>Ability to chat directly with end user from SME channel.</comment>
  </data>
  <data name="NotificationCardContent" xml:space="preserve">
    <value>**I have posted your question to experts**</value>
    <comment>Confirmation message to the user upon asking question to the expert.</comment>
  </data>
  <data name="TeamChatHeaderText" xml:space="preserve">
    <value>Initiate chat with end users</value>
    <comment>Team carousel chat card header-title of the chat card.</comment>
  </data>
  <data name="TeamChatContent" xml:space="preserve">
    <value>Click chat with user button to initiate a direct chat.</value>
    <comment>Team carousel chat card content- SME team members can chat directly with the end users.</comment>
  </data>
  <data name="TeamNotificationHeaderText" xml:space="preserve">
    <value>Receive notifications from end users</value>
    <comment>Team carousel function card content- title of the chat card.</comment>
  </data>
  <data name="TeamNotificationContent" xml:space="preserve">
    <value>You can see what users need help with.</value>
    <comment>Team carousel function card content- team can take the question from the end users through bot.</comment>
  </data>
  <data name="TeamTicketSystemHeaderText" xml:space="preserve">
    <value>Manage queries</value>
    <comment>Title of the query carousel card- ticket system.</comment>
  </data>
  <data name="TeamTicketSystemContent" xml:space="preserve">
    <value>Mark requests answered or unanswered to keep track of queries.</value>
    <comment>Team carousel query card content- team can keep track of the user request.</comment>
  </data>
  <data name="TakeATeamTourButtonText" xml:space="preserve">
    <value>Team tour</value>
    <comment>Action button which gives tour for the team on bot Functionalities.</comment>
  </data>
  <data name="WelcomeTeamCardContent" xml:space="preserve">
    <value>Hello team,   

I am your friendly Q&amp;A bot that helps you provide support to people who interact with me and need more assistance.</value>
    <comment>Welcome message when bot is added to a new team.</comment>
  </data>
  <data name="CustomMessage" xml:space="preserve">
    <value>Seems like I don't have the answer in my database. I can loop you in with an expert to answer your question, Click on "Ask expert" for posting your question to the expert.</value>
    <comment>Message when user asks random question to the bot.</comment>
  </data>
  <data name="TeamCustomMessage" xml:space="preserve">
    <value>Hello, I don't support bot commands in the Team. Here is a quick tour of how I can help.</value>
    <comment>When SME team member asks bot a questions- a message appears saying that team member is supposed to install the bot in personal scope.</comment>
  </data>
  <data name="DateCreatedDisplayFactTitle" xml:space="preserve">
    <value>**Created:**</value>
    <comment>Created: one of the available fact set in notification cards- created is the title for created date value.</comment>
  </data>
  <data name="ShowCardTitleText" xml:space="preserve">
    <value>Enter short title here (50 characters max)</value>
    <comment>Label text where users enters title for his question or feedback. </comment>
  </data>
  <data name="MandatoryTitleFieldText" xml:space="preserve">
    <value>Title field is mandatory.</value>
    <comment>Text that suggest users to fill mandatory fields.</comment>
  </data>
  <data name="ShareFeedbackTitleText" xml:space="preserve">
    <value>Share app feedback</value>
    <comment>Title text of share feedback user carousel card.</comment>
  </data>
  <data name="AskAnExpertDisplayText" xml:space="preserve">
    <value>Ask expert</value>
    <comment>Ask an expert display text: text sent to the bot when ask an expert button is clicked.</comment>
  </data>
  <data name="ShareFeedbackDisplayText" xml:space="preserve">
    <value>Feedback</value>
    <comment>Share feedback display text: text sent to the bot when share feedback button is clicked.</comment>
  </data>
  <data name="GoToOriginalThreadButtonText" xml:space="preserve">
    <value>Go to original thread</value>
    <comment>Go to original thread button available on messaging extension card.</comment>
  </data>
  <data name="NonSMEErrorText" xml:space="preserve">
    <value>The messaging extension can only be invoked from the channel in which the  app is installed</value>
    <comment>Error message when a user of non-SME team tries to access messaging extension application</comment>
  </data>
  <data name="SMEUserChatMessage" xml:space="preserve">
    <value>RE: {0}</value>
    <comment>The {0} is the placeholder for the title that the user had provided when asking an expert.</comment>
  </data>
  <data name="DescriptionFact" xml:space="preserve">
    <value>**Description:**</value>
    <comment>Available factset in user notification and SME facing cards.</comment>
  </data>
  <data name="FeedbackRatingRequired" xml:space="preserve">
    <value>Was the answer helpful?</value>
    <comment>Label for the feedback rating dropdown.</comment>
  </data>
  <data name="HelpfulRatingText" xml:space="preserve">
    <value>Helpful</value>
    <comment>Helpful: available feedback rating scale.</comment>
  </data>
  <data name="NeedsImprovementRatingText" xml:space="preserve">
    <value>Needs Improvement</value>
    <comment>Needs improvement: available feedback rating scale.</comment>
  </data>
  <data name="RatingTitle" xml:space="preserve">
    <value>**Rating:**</value>
    <comment>Rating fact is used in SME facing feedback card to show the rating submitted by the user from the rating dropdown in share feedback card.</comment>
  </data>
  <data name="RatingMandatoryText" xml:space="preserve">
    <value>Rating is mandatory</value>
    <comment>Rating is mandatory , a warning message to the user when rating is not submitted in share feedback activity.</comment>
  </data>
  <data name="TakeATourButtonText" xml:space="preserve">
    <value>Take a tour</value>
    <comment>Take a tour button available for the users on welcome card, through which user can take a tour on bot functionalities in personal scope. </comment>
  </data>
  <data name="TitleFact" xml:space="preserve">
    <value>**Title:**</value>
    <comment>Title fact is used to show the title entered by the user for his inquiry.</comment>
  </data>
  <data name="TitleRequiredText" xml:space="preserve">
    <value>Title (Required)</value>
    <comment>Title(Required): label of the title text box.</comment>
  </data>
  <data name="NotHelpfulRatingText" xml:space="preserve">
    <value>Not helpful</value>
    <comment>Unhelpful: available feedback rating scale.</comment>
  </data>
  <data name="ViewArticleButtonText" xml:space="preserve">
    <value>View answer</value>
    <comment>The necessary string for the view article button</comment>
  </data>
  <data name="SMEFeedbackHeaderText" xml:space="preserve">
    <value>**Feedback received**</value>
    <comment>Title text for SME facing feedback card.</comment>
  </data>
  <data name="EmptyQuestionErrorText" xml:space="preserve">
    <value>Question text cannot be empty.</value>
    <comment>Error message to show if question text box is empty while adding or editing the QnA pair.</comment>
  </data>
  <data name="AnswerTitle" xml:space="preserve">
    <value>**Answer:**</value>
    <comment>Label text for answer on the card.</comment>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this item? The question and answer will both be deleted.</value>
    <comment>Delete confirmation message.</comment>
  </data>
  <data name="DeleteButtonText" xml:space="preserve">
    <value>Delete</value>
    <comment>Delete button text.</comment>
  </data>
  <data name="LastEditedText" xml:space="preserve">
    <value>Last edited by</value>
    <comment>Show message on adaptive card after editing the QnA pair.</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
    <comment>No button text on delete QnA pair confirmation card.</comment>
  </data>
  <data name="QuestionTitle" xml:space="preserve">
    <value>**Question:** {0}</value>
    <comment>Label text for question on the card.</comment>
  </data>
  <data name="EditButtonText" xml:space="preserve">
    <value>Edit</value>
    <comment>Edit button text.</comment>
  </data>
  <data name="WaitMessageAnswer" xml:space="preserve">
    <value>Note: Updates are made every few minutes</value>
    <comment>Wait message to show on adaptive card after performing any action on QnA pair.</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>Yes button text on delete QnA pair confirmation card.</comment>
  </data>
  <data name="DeletedQnaPair" xml:space="preserve">
    <value>Deleted by {0}</value>
    <comment>Text shown on the card when a QnA pair is deleted.</comment>
  </data>
  <data name="UpdateHistoryButtonText" xml:space="preserve">
    <value>Update history</value>
    <comment>Update history button text.</comment>
  </data>
  <data name="WaitMessage" xml:space="preserve">
    <value>Please wait for some time, updates to this question: "{0}" will be available in short time.</value>
    <comment>Wait message to show below the adaptive card while trying to delete the question and is not available in production knowledgebase and waiting to be publish.</comment>
  </data>
  <data name="AddQuestionSubtitle" xml:space="preserve">
    <value>Add new question details</value>
    <comment>The subtitle at the top of task module while adding the new QnA pair.</comment>
  </data>
  <data name="EditQuestionSubtitle" xml:space="preserve">
    <value>Edit question details</value>
    <comment>The subtitle at the top of task module while editing the QnA pair.</comment>
  </data>
  <data name="HTMLErrorText" xml:space="preserve">
    <value>HTML tags are not supported.</value>
    <comment>Error message to show if HTML tags are entered on any field while adding or editing the QnA pair.</comment>
  </data>
  <data name="QuestionAlreadyExistsErrorText" xml:space="preserve">
    <value>Question already exist. please add different question.</value>
    <comment>Error message to show if question is already existing in the knowledgebase while adding or editing the QnA pair.</comment>
  </data>
  <data name="BackButtonCommandText" xml:space="preserve">
    <value>BackButton</value>
    <comment>Back button command text to identify the performed action.</comment>
  </data>
  <data name="InvalidImageUrlErrorText" xml:space="preserve">
    <value>Image URL is not valid.</value>
    <comment>Error message to show if image url is not valid while adding or editing the QnA pair.</comment>
  </data>
  <data name="EntryCreatedByText" xml:space="preserve">
    <value>Created by</value>
    <comment>Show message on adaptive card, after adding the QnA pair.</comment>
  </data>
  <data name="DescriptionPlaceholderText" xml:space="preserve">
    <value>Type your answer here</value>
    <comment>Placeholder text for description text box.</comment>
  </data>
  <data name="ImageUrlPlaceholderText" xml:space="preserve">
    <value>Paste image url here</value>
    <comment>Placeholder text for image url text box.</comment>
  </data>
  <data name="QuestionPlaceholderText" xml:space="preserve">
    <value>Type your question here (Max 300 characters)</value>
    <comment>Placeholder text for question text box.</comment>
  </data>
  <data name="TitlePlaceholderText" xml:space="preserve">
    <value>Type your title here</value>
    <comment>Placeholder text for title text box.</comment>
  </data>
  <data name="BackButtonText" xml:space="preserve">
    <value>Back</value>
    <comment>The back button text on the add/edit QnA pair task module, while previewing the card.</comment>
  </data>
  <data name="DescriptionLabelText" xml:space="preserve">
    <value>Detailed answer</value>
    <comment>Label text for description text box.</comment>
  </data>
  <data name="QuestionLabelText" xml:space="preserve">
    <value>Question</value>
    <comment>Label text for question text box.</comment>
  </data>
  <data name="TitleLabelText" xml:space="preserve">
    <value>Answer Title</value>
    <comment>Label text for title text box.</comment>
  </data>
  <data name="ImageLabelText" xml:space="preserve">
    <value>Image URL (optional)</value>
    <comment>Label text for image url text box.</comment>
  </data>
  <data name="UpdateHistoryHeadersText" xml:space="preserve">
    <value>Name|Action|Date</value>
    <comment>Header text for update history adaptiver card. which shows the history of actions performed by users on a QnA pair.</comment>
  </data>
  <data name="GoToThread" xml:space="preserve">
    <value>View details</value>
    <comment>Button title for the card created through Messaging Extension</comment>
  </data>
  <data name="PreviewButtonText" xml:space="preserve">
    <value>Preview</value>
    <comment>Preview button text.</comment>
  </data>
  <data name="SaveButtonText" xml:space="preserve">
    <value>Save</value>
    <comment>Save button text for QnA pair.</comment>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>{0} at {1}</value>
    <comment>Used in date string format for adaptive card. {0} is for date and {1} is for time.</comment>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Something went wrong. Please try again later.</value>
    <comment>Error message to show if there is any exception.</comment>
  </data>
  <data name="EmptyDescriptionErrorText" xml:space="preserve">
    <value>Description cannot be empty.</value>
    <comment>Error message to show if description text box is empty while adding or editing the QnA pair.</comment>
  </data>
  <data name="SuggestedText" xml:space="preserve">
    <value>Text fields are markdown supported</value>
  </data>
  <data name="ManuallyAddedQuestionMessage" xml:space="preserve">
    <value>Manually added question</value>
    <comment>Question answer pair added manually in QnA Maker</comment>
  </data>
  <data name="UpdateHistoryDateHeaderText" xml:space="preserve">
    <value>Date</value>
    <comment>Date header text in update history adaptive card text.</comment>
  </data>
  <data name="CustomMessageHeader" xml:space="preserve">
    <value>**I don't have the answer to that!**</value>
    <comment>Message header when user asks random question to the bot.</comment>
  </data>
  <data name="EnglishButtonText" xml:space="preserve">
    <value>English</value>
    <comment>Label text for english language button.</comment>
  </data>
  <data name="EnglishLanguageSelectionContent" xml:space="preserve">
    <value>Perfect! Write down your question in the chat and i will help you right away.</value>
    <comment>Language selection message.</comment>
  </data>
  <data name="MyQuestionLabelText" xml:space="preserve">
    <value>My questions</value>
    <comment>Label text for my questions tab.</comment>
  </data>
  <data name="MyQuestionNotificationCardContent" xml:space="preserve">
    <value>You can check the questions answered by experts in "My questions" tab.</value>
    <comment>My question message to be displayed to user on card.</comment>
  </data>
  <data name="NotificationCardDetailContent" xml:space="preserve">
    <value>Your query has been shared with the experts, i'll get back to you with the updates.</value>
    <comment>Confirmation message to the user upon asking question to the expert.</comment>
  </data>
  <data name="PortugueseButtonText" xml:space="preserve">
    <value>Portugués</value>
    <comment>Label text for portuguese language button.</comment>
  </data>
  <data name="PortugueseLanguageSelectionContent" xml:space="preserve">
    <value>Perfeito, perfeito! Escreva a sua pergunta na conversa e eu o ajudarei imediatamente.</value>
    <comment>Language selection message in portuguese.</comment>
  </data>
  <data name="SpanishButtonText" xml:space="preserve">
    <value>Español</value>
    <comment>Label text for spanish language button.</comment>
  </data>
  <data name="SpanishLanguageSelectionContent" xml:space="preserve">
    <value>¡Perfecto! Anota tu pregunta en el chat y te ayudaré de inmediato.</value>
    <comment>Language selection message in spanish.</comment>
  </data>
  <data name="TicketIDFact" xml:space="preserve">
    <value>**TicketID:**</value>
    <comment>Ticket id fact is used to show the ticket id generated for the ticket.</comment>
  </data>
  <data name="WelcomeEnglishContent" xml:space="preserve">
    <value>Hi! I am FAQ bot, I can help you resolve your queries related to your learning about Teams platform. Please select a language in which you want to continue.</value>
    <comment>Welcome message in english when bot is added to new personal chat.</comment>
  </data>
  <data name="WelcomePortugueseContent" xml:space="preserve">
    <value>¡Hola! Soy un bot de preguntas frecuentes, puedo ayudarlo a resolver sus consultas relacionadas con su aprendizaje sobre la platforma Teams. Seleccione un idioma en el que desea continuar.</value>
    <comment>welcome message in portuguese when bot is added to new personal chat.</comment>
  </data>
  <data name="WelcomeSpanishContent" xml:space="preserve">
    <value>Oi! Sou um bot de perguntas frequentes, posso ajudá-lo a resolver suas dúvidas relacionadas ao seu aprendizado sobre a plataforma Teams. Por favor, selecione o idioma em que deseja continuar.</value>
    <comment>Welcome message in spanish when bot is added to new personal chat.</comment>
  </data>
  <data name="AnsweredUserNotificationStatus" xml:space="preserve">
    <value>Answered</value>
    <comment>The status value for the user notification when a ticket is answered.</comment>
  </data>
  <data name="ChangeLanguageHeaderText" xml:space="preserve">
    <value>Choose your language</value>
    <comment>Language change header.</comment>
  </data>
  <data name="DateFactTitle" xml:space="preserve">
    <value>**Date:**</value>
    <comment>The fact set title for the date created in the SME Ticket card.</comment>
  </data>
  <data name="ExistingAnswerFactTitle" xml:space="preserve">
    <value>**Existing answer:**</value>
    <comment>The fact set title for the existing answer in KB in the SME Ticket card.</comment>
  </data>
  <data name="QuestionAskedByFactTitle" xml:space="preserve">
    <value>**Asked by:**</value>
    <comment>The fact set title for the question asked by in the SME Ticket card.</comment>
  </data>
  <data name="QuestionMessageFeedbackText" xml:space="preserve">
    <value>**Question:**</value>
    <comment>Message text in Feedback card.</comment>
  </data>
  <data name="RespondButtonText" xml:space="preserve">
    <value>Respond</value>
    <comment>Response button text in SME ticket response card.</comment>
  </data>
  <data name="SendFeedbackButtonText" xml:space="preserve">
    <value>Send feedback</value>
    <comment>Send feedback button text in share feedback card.</comment>
  </data>
  <data name="SendFeedbackDisplayText" xml:space="preserve">
    <value>Send feedback</value>
    <comment>Send feedback display text in share feedback card.</comment>
  </data>
  <data name="SMETicketActualQuestionInKBText" xml:space="preserve">
    <value>Actual question in KB: {0}</value>
    <comment>The sub header in SME ticket card showing actual question in KB.</comment>
  </data>
  <data name="SMETicketAnsweredStatus" xml:space="preserve">
    <value>Answered by {0}</value>
    <comment>SME ticket status posted when ticket is answered - {0} represents SME.</comment>
  </data>
  <data name="SMETicketCardYourAnswerLabel" xml:space="preserve">
    <value>Your answer</value>
    <comment>Label in SMETicket card to mark answer by SME.</comment>
  </data>
  <data name="SMETicketHeaderText" xml:space="preserve">
    <value>**ID #{0} | {1}**</value>
    <comment>The header text of SME ticket card.</comment>
  </data>
  <data name="SMETicketNoQuestionInKBText" xml:space="preserve">
    <value>No similar question found in knowledge base</value>
    <comment>The sub header in SME ticket card if no question found in KB.</comment>
  </data>
  <data name="SMETicketUnansweredStatus" xml:space="preserve">
    <value>Unanswered</value>
    <comment>SME ticket status posted when ticket is unanswered.</comment>
  </data>
  <data name="UnAnsweredUserNotificationStatus" xml:space="preserve">
    <value>Unanswered</value>
    <comment>The status value for the user notification when a ticket is unanswered.</comment>
  </data>
  <data name="UpdateExistingButtonText" xml:space="preserve">
    <value>Update existing answer</value>
    <comment>Update existing answer button text in SME ticket response card.</comment>
  </data>
  <data name="WelcomeHeaderText" xml:space="preserve">
    <value>Welcome!</value>
    <comment>Welcome message header.</comment>
  </data>
  <data name="AddActionMessage" xml:space="preserve">
    <value>AddToKB</value>
    <comment>Message to be saved in update response payload.</comment>
  </data>
  <data name="AddToKBText" xml:space="preserve">
    <value>Add to knowledge base</value>
    <comment>Check button text to add answer to KB.</comment>
  </data>
  <data name="AppendActionMessage" xml:space="preserve">
    <value>AppendToKB</value>
    <comment>Message to be saved in Update response payload.</comment>
  </data>
  <data name="AppendToKBText" xml:space="preserve">
    <value>Append this response with the existing answer in the knowledge base</value>
    <comment>Check button text to append answer to KB.</comment>
  </data>
  <data name="ResponsePlaceholderText" xml:space="preserve">
    <value>Write your response here</value>
    <comment>Placeholder text in SME response card.</comment>
  </data>
  <data name="SubmitResponseButtonText" xml:space="preserve">
    <value>Submit response</value>
    <comment>Action button which saves the response sent from SME.</comment>
  </data>
  <data name="WarningMessageOnUpdateAnswer" xml:space="preserve">
    <value>Your answer will be updated in the knowledge base as well as will be sent to the requester.</value>
    <comment>Warning message to be shown to SME on updating existing answer.</comment>
  </data>
  <data name="AnsweredTicketUserNotification" xml:space="preserve">
    <value>This request has been answered. Ask an expert again if you still need more assistance.</value>
    <comment>The status value for the user notification when a ticket is answered by an expert.</comment>
  </data>
  <data name="ChatWithExpertButton" xml:space="preserve">
    <value>Chat with expert</value>
    <comment>Button text for chat with expert button.</comment>
  </data>
  <data name="ProvidedByFact" xml:space="preserve">
    <value>**Provided by:**</value>
    <comment>Provided by fact to be shown in card.</comment>
  </data>
  <data name="SMEAnsweredResponseStatus" xml:space="preserve">
    <value>{0} has responded to the question, the question has been marked as answered.</value>
    <comment>Message posted to the thread when the ticket is answered. {0} = name of SME who answered the ticket.</comment>
  </data>
  <data name="SMEAnsweredUpdateStatus" xml:space="preserve">
    <value>{0} has responded and updated the answer in the knowledge base.</value>
    <comment>Message posted to the thread when the ticket is answered and updated in KB. {0} = name of SME who answered the ticket.</comment>
  </data>
  <data name="SMEReplyCardAnswerByExpert" xml:space="preserve">
    <value>Answer by expert
{0}</value>
    <comment>Answer given by SME to be shown in card. {0} represents answer.</comment>
  </data>
  <data name="SMEReplyCardFooterMessage" xml:space="preserve">
    <value>I hope the answer was useful to you.
Your query has been marked as answered, if you still need assistance regarding the question, feel free to chat with the expert.</value>
    <comment>Message to be shown below the SME reply card.</comment>
  </data>
  <data name="SMEReplyCardHeaderText" xml:space="preserve">
    <value>**ID #{0} | Expert responded to your query**</value>
    <comment>Header of the reply card sent to user from SME.</comment>
  </data>
  <data name="SMETicketAnsweredAndUpdatedStatus" xml:space="preserve">
    <value>Answered and updated by {0}</value>
    <comment>SME ticket status posted when ticket is answered and updated - {0} represents SME.</comment>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>Description</value>
    <comment>Available header in Ask expert card.</comment>
  </data>
  <data name="MandatoryAnswerFieldText" xml:space="preserve">
    <value>Answer field is mandatory.</value>
    <comment>Text that suggest users to fill mandatory fields.</comment>
  </data>
  <data name="PreviewCardHeaderMessage" xml:space="preserve">
    <value>Here is a preview of your knowledge base entry</value>
    <comment>Preview card header message text.</comment>
  </data>
  <data name="SMEFeedbackTicketIDFact" xml:space="preserve">
    <value>ID #{0} | {1}</value>
    <comment>The ticket id format for SME feedback card</comment>
  </data>
  <data name="AskAnExpertCommandText" xml:space="preserve">
    <value>Ask expert</value>
    <comment>Ask an expert bot command text</comment>
  </data>
  <data name="MoreTitleText" xml:space="preserve">
    <value>More</value>
    <comment>Title for showing more prompts</comment>
  </data>
  <data name="ShareFeedbackCommandText" xml:space="preserve">
    <value>Feedback</value>
    <comment>Share Feedback bot command text</comment>
  </data>
  <data name="ResponseHeaderText" xml:space="preserve">
    <value>Here is what I found:</value>
    <comment>Response header-letting the user know that a response is generated to their request from QnA Maker.</comment>
  </data>
  <data name="ShowPromptsTitleText" xml:space="preserve">
    <value>Follow-up prompt</value>
    <comment>ShowCard title text for showing prompts</comment>
  </data>
</root>